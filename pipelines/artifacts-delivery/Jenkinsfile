pipeline {
    agent {
        docker {
            image 'maven:3.6.3-jdk-11'
            args '-v /root/.m2:/root/.m2'
        }
    }

    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "192.168.0.27:8083"
        NEXUS_REPOSITORY = "maven-nexus-repo"
        NEXUS_CREDENTIAL_ID = "nexus"
    }

    stages {
        stage('Info') {
            steps {
                echo 'Current working directory: '

                sh 'pwd'

                echo 'List of files: '

                sh 'ls -la'
            }
        }
        stage('Checkout') {
            steps {
                echo 'Checkout code from GitLab...'

                checkout([$class: 'GitSCM', branches: [[name: '*/master']], browser: [$class: 'GitLab', repoUrl: 'http://192.168.0.18:9080'], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '4136d7ee-8c32-4f18-ad19-0db3d1d93df1', url: 'http://192.168.0.18:9080/seba/simple-rest-api-java-spring.git']]])

                echo 'Current working directory: '

                sh 'pwd'

                echo 'List of files: '

                sh 'ls -la'
            }
        }        
        stage('Build') {
            steps {
                echo 'Building..'

                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Publish to Nexus') {
            steps {
                script {
                    // required plugins: pipeline-utility-steps, nexus-artifact-uploader
                    pom = readMavenPom file: "pom.xml";
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
        stage('Publish to Artifactory') {
            steps {
                // required plugins: artifactory
                rtUpload (
                    serverId: 'artifactory_homelab',
                    spec: '''{
                          "files": [
                            {
                              "pattern": "target/api*.jar",
                              "target": "libs-release-local"
                            }
                         ]
                    }'''
                )
            }
        }
    }

    post {
        success {
            mail to: "sebaczech@gmail.com",
            subject: "CI/CD platform - success pipeline - ${currentBuild.fullDisplayName}",
            body: "Everything is ok with ${env.BUILD_URL}"
        }
        failure {
            mail to: "sebaczech@gmail.com",
            subject: "CI/CD platform - failed pipeline: ${currentBuild.fullDisplayName}",
            body: "Something is wrong with ${env.BUILD_URL}"
        }
    }    
}